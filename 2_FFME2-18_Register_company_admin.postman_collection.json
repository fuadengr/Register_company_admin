{
	"info": {
		"_postman_id": "512aeed4-b344-4c50-8f16-406535d6b7f2",
		"name": "2_FFME2-18_Register_company_admin",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Positive",
			"item": [
				{
					"name": "1.2 FFME2-18 Register_Company_Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1186aab7-3e64-49f2-a939-3c1e7700083d",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"data\": {\r",
									"                \"company_address\": \"pennyslvania\",\r",
									"                \"company_name\": \"Workspace\",\r",
									"                \"tin\": \"1122002233\"\r",
									"            },\r",
									"            \"message\": \"Successfully registered company 'Workspace' .\",\r",
									"            \"status\": \"success\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"data\",\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"data\": {\r",
									"            \"$id\": \"#/properties/data\",\r",
									"            \"type\": \"object\",\r",
									"            \"title\": \"The data schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": {},\r",
									"            \"examples\": [\r",
									"                {\r",
									"                    \"company_address\": \"pennyslvania\",\r",
									"                    \"company_name\": \"Workspace\",\r",
									"                    \"tin\": \"1122002233\"\r",
									"                }\r",
									"            ],\r",
									"            \"required\": [\r",
									"                \"company_address\",\r",
									"                \"company_name\",\r",
									"                \"tin\"\r",
									"            ],\r",
									"            \"properties\": {\r",
									"                \"company_address\": {\r",
									"                    \"$id\": \"#/properties/data/properties/company_address\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The company_address schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"pennyslvania\"\r",
									"                    ]\r",
									"                },\r",
									"                \"company_name\": {\r",
									"                    \"$id\": \"#/properties/data/properties/company_name\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The company_name schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"Workspace\"\r",
									"                    ]\r",
									"                },\r",
									"                \"tin\": {\r",
									"                    \"$id\": \"#/properties/data/properties/tin\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The tin schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"1122002233\"\r",
									"                    ]\r",
									"                }\r",
									"            },\r",
									"            \"additionalProperties\": true\r",
									"        },\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"Successfully registered company 'Workspace' .\"\r",
									"            ]\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"success\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"email\": \"california@yahoo.com\",\r\n \"password\": \"1asdf234\",\r\n \"username\": \"California\",\r\n \"firstname\": \"Mr\",\r\n \"lastname\": \"abc\",\r\n \"company_id\": 175,\r\n \"member_type\": 2\r\n}\r\n"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "Precondition: User should be able to registraion their company to our service.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: User should be able to create many user's under their company panel. Register Panel Users for Web Admin Dashboard\r\n\r\nTester need to pass these informations of the sub user in the body section:\r\n\r\n\r\n \"email\": (unique)\r\n \"password\":\r\n \"username\": (unique)\r\n \"firstname\":\r\n \"lastname\": \r\n \"company_id\": (From database)\r\n \"member_type\": (default number is 2)\r\n"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Negative",
			"item": [
				{
					"name": "FFME2-18.1 Register_company_admin_without_email",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "510b4d77-e4a9-4adb-91ef-e8a98ae1c488",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= \r",
									"{\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"email must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"email must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"email must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"Hellohello\",\r\n    \"username\": \"user6\",\r\n    \"firstname\": \"first\",\r\n    \"lastname\": \"lastuser\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"email\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"\",\r\n    \"password\": \"Hellohello\",\r\n    \"username\": \"user6\",\r\n    \"firstname\": \"first\",\r\n    \"lastname\": \"lastuser\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.2 Register_company_admin_without_password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9a87eb14-2bc3-46a2-aaae-d436fda18146",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"password must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"password must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"password must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"user6\",\r\n    \"firstname\": \"first\",\r\n    \"lastname\": \"lastuser\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"password\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuadengr@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"user6\",\r\n    \"firstname\": \"first\",\r\n    \"lastname\": \"lastuser\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.3 Register_company_admin_without_username",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cd09ed2a-01b8-4888-9430-04bbb2f17eb8",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= \r",
									"{\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"username must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"username must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"username must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"Hellohello\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"first\",\r\n    \"lastname\": \"lastuser\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"username\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuadengr@yahoo.com\",\r\n    \"password\": \"Hellohello\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"first\",\r\n    \"lastname\": \"lastuser\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"username must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"username must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.4 Register_company_admin_without_firstname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7edcb5fa-8214-4024-87b5-16b27c990563",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"firstname must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"firstname must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"firstname must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"Hellohello\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"lastuser\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"firstname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuadengr@yahoo.com\",\r\n    \"password\": \"Hellohello\",\r\n    \"username\": \"user6\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"lastuser\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"firstname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"firstname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.5 Register_company_admin_without_lastname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "798673a5-b42b-44a2-8f39-0a9693028be7",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= \r",
									"{\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"lastname must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"lastname must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"lastname must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"Hellohello\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"hello1\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"lastname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuadengr@yahoo.com\",\r\n    \"password\": \"Hellohello\",\r\n    \"username\": \"user6\",\r\n    \"firstname\": \"first\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.6 Register_company_admin_without_company_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "64313c90-acf8-4bed-a5f1-49b3009ef18e",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"company id must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"company id must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"company id must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"Hellohello\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"hello1\",\r\n    \"lastname\": \"hami\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": \"2\"\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"company id\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuadengr@yahoo.com\",\r\n    \"password\": \"Hellohello\",\r\n    \"username\": \"user6\",\r\n    \"firstname\": \"first\",\r\n    \"lastname\": \"lastuser\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.7 Register_company_admin_without_member_type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fa210355-62c3-4016-b457-ec0b89a61aa5",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= \r",
									"{\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"member_type must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"member_type must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"member_type must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"Hellohello\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"feeeo\",\r\n    \"lastname\": \"lastuser\",\r\n    \"company_id\": 1,\r\n    \"member_type\": \"\"\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"member type\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuadengr@yahoo.com\",\r\n    \"password\": \"Hellohello\",\r\n    \"username\": \"user6\",\r\n    \"firstname\": \"first\",\r\n    \"lastname\": \"lastuser\",\r\n    \"company_id\": 1,\r\n    \"member_type\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.8 Register_company_admin_without_email_password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e9f26bba-79a1-4b06-8649-517653af77a2",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"email must be non-empty\",\r",
									"                \"password must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"email must be non-empty\",\r",
									"                    \"password must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"email must be non-empty\",\r",
									"                            \"password must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"hello01\",\r\n    \"lastname\": \"lastuser\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"email and password\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"user6\",\r\n    \"firstname\": \"first\",\r\n    \"lastname\": \"lastuser\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.9 Register_company_admin_without_email_and_username",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "712a6a79-d05a-4e2e-b744-9040338b81cc",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"email must be non-empty\",\r",
									"                \"username must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"email must be non-empty\",\r",
									"                    \"username must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"email must be non-empty\",\r",
									"                            \"username must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"Hellohello\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"first\",\r\n    \"lastname\": \"lastuser\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"email and username\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"\",\r\n    \"password\": \"Hellohello\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"first\",\r\n    \"lastname\": \"lastuser\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"username must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"username must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.10 Register_company_admin_without_email_firstname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3b9941e2-ca60-446a-9a73-60931e889f7c",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"email must be non-empty\",\r",
									"                \"firstname must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"email must be non-empty\",\r",
									"                    \"firstname must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"email must be non-empty\",\r",
									"                            \"firstname must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"20012001\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"ahmed\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"email and firstname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"\",\r\n    \"password\": \"20012001\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"ahmed\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"firstname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"firstname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.11 Register_company_admin_without_email_lastname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7a582779-924a-44bf-8049-60f2d2828332",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"email must be non-empty\",\r",
									"                \"lastname must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"email must be non-empty\",\r",
									"                    \"lastname must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"email must be non-empty\",\r",
									"                            \"lastname must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"20012001\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"Fuad\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"email and lastname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"\",\r\n    \"password\": \"20012001\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"Fuad\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.12 Register_company_admin_without_email_and_company_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7043377-e91d-4ba3-857a-c3cc9e651069",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= \r",
									"{\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"email must be non-empty\",\r",
									"                \"company id must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"email must be non-empty\",\r",
									"                    \"company id must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"email must be non-empty\",\r",
									"                            \"company id must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"20012001\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"Fuad\",\r\n    \"lastname\": \"Ahmed\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": 2\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"email and company id\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"\",\r\n    \"password\": \"20012001\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"Fuad\",\r\n    \"lastname\": \"Ahmed\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.13 Register_company_admin_without_email_and_member_type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d5295859-3bb2-403b-a17f-15304ed7a224",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= \r",
									"{\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"email must be non-empty\",\r",
									"                \"member_type must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"email must be non-empty\",\r",
									"                    \"member_type must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"email must be non-empty\",\r",
									"                            \"member_type must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"20012001\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"Fuad\",\r\n    \"lastname\": \"Ahmed\",\r\n    \"company_id\": \"1\",\r\n    \"member_type\": \"\"\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"email and member type\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"\",\r\n    \"password\": \"20012001\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"Fuad\",\r\n    \"lastname\": \"Ahmed\",\r\n    \"company_id\": \"1\",\r\n    \"member_type\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.14 Register_company_admin_without_username_password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d87def61-48e9-4c6f-a90b-072aa3d52a30",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"password must be non-empty\",\r",
									"                \"username must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"password must be non-empty\",\r",
									"                    \"username must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"password must be non-empty\",\r",
									"                            \"username must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"Hello\",\r\n    \"lastname\": \"world\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"password and username\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"Hello\",\r\n    \"lastname\": \"world\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.15 Register_compnay_admin_without_password_firstname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "162d0024-c7b6-4d29-9a6a-9b1e02b94000",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"password must be non-empty\",\r",
									"                \"firstname must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"password must be non-empty\",\r",
									"                    \"firstname must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"password must be non-empty\",\r",
									"                            \"firstname must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"lastuser\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"password and firstname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"lastuser\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"firstname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"firstname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.16 Register_compnay_admin_without_password_lastname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0444493d-05c3-4e2e-8b83-e0a867c6984b",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"password must be non-empty\",\r",
									"                \"lastname must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"password must be non-empty\",\r",
									"                    \"lastname must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"password must be non-empty\",\r",
									"                            \"lastname must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"Hello\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"password and lastname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"Hello\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.17 Register_company_admin_without_password_and_company_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "82f0d7da-8be4-4fd3-9928-576ebb58d18e",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= \r",
									"{\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"password must be non-empty\",\r",
									"                \"company id must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"password must be non-empty\",\r",
									"                    \"company id must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"password must be non-empty\",\r",
									"                            \"company id must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"Fuad\",\r\n    \"lastname\": \"Ahmed\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": 2\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"password and company id\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"Fuad\",\r\n    \"lastname\": \"Ahmed\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.18 Register_company_admin_without_password_and_member_type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "038d89cb-ccaa-4666-8073-2099d0e378d8",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"password must be non-empty\",\r",
									"                \"member_type must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"password must be non-empty\",\r",
									"                    \"member_type must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"password must be non-empty\",\r",
									"                            \"member_type must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"Fuad\",\r\n    \"lastname\": \"Ahmed\",\r\n    \"company_id\": 1,\r\n    \"member_type\": \"\"\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"password and member_type\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"Fuad\",\r\n    \"lastname\": \"Ahmed\",\r\n    \"company_id\": 1,\r\n    \"member_type\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.19 Register_company_admin_without_username_firstname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "19be89d9-e323-4795-a8b8-75d0f56943ff",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"username must be non-empty\",\r",
									"                \"firstname must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"username must be non-empty\",\r",
									"                    \"firstname must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"username must be non-empty\",\r",
									"                            \"firstname must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"fuad@yahoo.com\",\r\n    \"password\": \"hellohello\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"hello01\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"username and firstname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"fuad@yahoo.com\",\r\n    \"password\": \"hellohello\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"hello01\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"username must be non-empty\",\r\n        \"firstname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"username must be non-empty\",\r\n        \"firstname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.20 Register_company_admin_without_username_lastname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ab0a6802-935b-42f0-8c22-c95f2a168135",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"username must be non-empty\",\r",
									"                \"lastname must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"username must be non-empty\",\r",
									"                    \"lastname must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"username must be non-empty\",\r",
									"                            \"lastname must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"fuad@yahoo.com\",\r\n    \"password\": \"hellohello\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"hello01\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"username and lastname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"fuad@yahoo.com\",\r\n    \"password\": \"hellohello\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"hello01\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"username must be non-empty\",\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"username must be non-empty\",\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.21 Register_company_admin_without_username_and_company_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "85731583-0d85-4954-a3ca-60a6609565e7",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"username must be non-empty\",\r",
									"                \"company id must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"username must be non-empty\",\r",
									"                    \"company id must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"username must be non-empty\",\r",
									"                            \"company id must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"fuad@yahoo.com\",\r\n    \"password\": \"hellohello\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"hello01\",\r\n    \"lastname\": \"frf\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": 2\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"username and company id\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"fuad@yahoo.com\",\r\n    \"password\": \"hellohello\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"hello01\",\r\n    \"lastname\": \"frf\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"username must be non-empty\",\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"username must be non-empty\",\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.22 Register_company_admin_without_username_and_member_type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "616565de-13b7-48bb-b1e5-2bb4cc5057fa",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"username must be non-empty\",\r",
									"                \"member_type must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"username must be non-empty\",\r",
									"                    \"member_type must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"username must be non-empty\",\r",
									"                            \"member_type must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"fuad@yahoo.com\",\r\n    \"password\": \"hellohello\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"hello01\",\r\n    \"lastname\": \"frf\",\r\n    \"company_id\": 2,\r\n    \"member_type\": \"\"\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"username and member type\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"fuad@yahoo.com\",\r\n    \"password\": \"hellohello\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"hello01\",\r\n    \"lastname\": \"frf\",\r\n    \"company_id\": 2,\r\n    \"member_type\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"username must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"username must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.23 Register_company_admin_without_firstname_lastname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "098c62b1-e9bd-4ba5-8778-5c1caeb78a2c",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"firstname must be non-empty\",\r",
									"                \"lastname must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"firstname must be non-empty\",\r",
									"                    \"lastname must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"firstname must be non-empty\",\r",
									"                            \"lastname must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"fuad@yahoo.com\",\r\n    \"password\": \"hellohello\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						}
					},
					"response": []
				},
				{
					"name": "FFME2-18.24 Register_company_admin_without_firstname_and_company_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ab8a9ed7-7ec0-49a6-b41f-a926c2559519",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= \r",
									"{\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"firstname must be non-empty\",\r",
									"                \"company id must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"firstname must be non-empty\",\r",
									"                    \"company id must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"firstname must be non-empty\",\r",
									"                            \"company id must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"fuad@yahoo.com\",\r\n    \"password\": \"hellohello\",\r\n    \"username\": \"user01\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"bingo\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": 2\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"firstname and company id\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"fuad@yahoo.com\",\r\n    \"password\": \"hellohello\",\r\n    \"username\": \"user01\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"bingo\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"firstname must be non-empty\",\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"firstname must be non-empty\",\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.25 Register_company_admin_without_firstname_and_member_type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "efe1fbe3-6608-4ad4-b7ce-557048394681",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"firstname must be non-empty\",\r",
									"                \"member_type must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"firstname must be non-empty\",\r",
									"                    \"member_type must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"firstname must be non-empty\",\r",
									"                            \"member_type must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"fuad@yahoo.com\",\r\n    \"password\": \"hellohello\",\r\n    \"username\": \"user01\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"bingo\",\r\n    \"company_id\": \"2\",\r\n    \"member_type\": \"\"\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"firstname and member type\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"fuad@yahoo.com\",\r\n    \"password\": \"hellohello\",\r\n    \"username\": \"user01\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"bingo\",\r\n    \"company_id\": \"2\",\r\n    \"member_type\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"firstname must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"firstname must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.26 Register_company_admin_without_lastname_and_company_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8592ae3a-4ddf-4449-8a6c-ec629163a582",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"lastname must be non-empty\",\r",
									"                \"company id must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"lastname must be non-empty\",\r",
									"                    \"company id must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"lastname must be non-empty\",\r",
									"                            \"company id must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"fuad@yahoo.com\",\r\n    \"password\": \"hellohello\",\r\n    \"username\": \"user01\",\r\n    \"firstname\": \"abid\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": \"1\"\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"company id and lastname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"fuad@yahoo.com\",\r\n    \"password\": \"hellohello\",\r\n    \"username\": \"user01\",\r\n    \"firstname\": \"abid\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": \"1\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"lastname must be non-empty\",\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"lastname must be non-empty\",\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.27 Register_company_admin_without_lastname_and_member_type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "74726258-1bb6-45bd-9cde-6e3f92c48f77",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"lastname must be non-empty\",\r",
									"                \"member_type must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"lastname must be non-empty\",\r",
									"                    \"member_type must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"lastname must be non-empty\",\r",
									"                            \"member_type must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"fuad@yahoo.com\",\r\n    \"password\": \"hellohello\",\r\n    \"username\": \"user01\",\r\n    \"firstname\": \"bingo\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": \"2\",\r\n    \"member_type\": \"\"\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"member type and lastname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"fuad@yahoo.com\",\r\n    \"password\": \"hellohello\",\r\n    \"username\": \"user01\",\r\n    \"firstname\": \"bingo\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": \"2\",\r\n    \"member_type\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"lastname must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"lastname must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.28 Register_company_admin_without_company_id_and_memberType",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c2d25cab-dec1-43b2-8f73-b7c681345eb2",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"company id must be non-empty\",\r",
									"                \"member_type must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"company id must be non-empty\",\r",
									"                    \"member_type must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"company id must be non-empty\",\r",
									"                            \"member_type must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"Hellohello\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"hello1\",\r\n    \"lastname\": \"hami\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": \"\"\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"company id and member type\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"Hellohello\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"hello1\",\r\n    \"lastname\": \"hami\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"company id must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"company id must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.29 Register_company_admin_without_any_data",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5628a3b7-3cdb-474c-a78c-88e010a7219f",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"email must be non-empty\",\r",
									"                \"password must be non-empty\",\r",
									"                \"firstname must be non-empty\",\r",
									"                \"lastname must be non-empty\",\r",
									"                \"company id must be non-empty\",\r",
									"                \"member_type must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"email must be non-empty\",\r",
									"                    \"password must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"email must be non-empty\",\r",
									"                            \"password must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\r\n   {\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"1\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": \"\"\r\n}\r\n"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"all the information\" empty.\r\n\r\nTest Data: \r\n\r\n   {\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"1\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": \"\"\r\n}\r\n\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\",\r\n        \"firstname must be non-empty\",\r\n        \"lastname must be non-empty\",\r\n        \"company id must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\",\r\n        \"firstname must be non-empty\",\r\n        \"lastname must be non-empty\",\r\n        \"company id must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.30 Register_company_admin_without_email_password_username",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ba82c529-c261-4bf0-ac27-2e83ac955586",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= \r",
									"{\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"email must be non-empty\",\r",
									"                \"password must be non-empty\",\r",
									"                \"username must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"email must be non-empty\",\r",
									"                    \"password must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"email must be non-empty\",\r",
									"                            \"password must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"Fuad\",\r\n    \"lastname\": \"ahmed\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"email password and username\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"Fuad\",\r\n    \"lastname\": \"ahmed\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.31 Register_company_admin_without_email_and_password_and_firstname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3e8fb675-2026-4941-a652-116c7c8061fa",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"email must be non-empty\",\r",
									"                \"password must be non-empty\",\r",
									"                \"firstname must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"email must be non-empty\",\r",
									"                    \"password must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"email must be non-empty\",\r",
									"                            \"password must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"lastuser\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"email password and firstname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"lastuser\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\",\r\n        \"firstname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\",\r\n        \"firstname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.32 Register_company_admin_without_email_password_and_lastname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d7b5ba2c-11c8-4b98-a5e6-b942fc2a8534",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"email must be non-empty\",\r",
									"                \"password must be non-empty\",\r",
									"                \"laststname must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"email must be non-empty\",\r",
									"                    \"password must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"email must be non-empty\",\r",
									"                            \"password must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"Fuad\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"email password and lastname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"Fuad\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\",\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\",\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.33 Register_company_admin_without_email_password_company_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "468fccff-d44b-4cae-806c-747063c1c5be",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"email must be non-empty\",\r",
									"                \"password must be non-empty\",\r",
									"                \"company id must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"email must be non-empty\",\r",
									"                    \"password must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"email must be non-empty\",\r",
									"                            \"password must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"Fuad\",\r\n    \"lastname\": \"ahmed\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": 2\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"email password and company id\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"Fuad\",\r\n    \"lastname\": \"ahmed\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\",\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\",\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.34 Register_company_admin_without_email_password_member_type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "84d07635-de5a-4aa0-951d-812a696c9eaa",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= \r",
									"{\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"email must be non-empty\",\r",
									"                \"password must be non-empty\",\r",
									"                \"member_type must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"email must be non-empty\",\r",
									"                    \"password must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"email must be non-empty\",\r",
									"                            \"password must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"Fuad\",\r\n    \"lastname\": \"ahmed\",\r\n    \"company_id\": 1,\r\n    \"member_type\": \"\"\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"email password and member type\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"Fuad\",\r\n    \"lastname\": \"ahmed\",\r\n    \"company_id\": 1,\r\n    \"member_type\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.35 Register_company_admin_without_password_username_firstname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f2969422-7a37-4ec9-8873-df6da80170f0",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= \r",
									"{\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"password must be non-empty\",\r",
									"                \"username must be non-empty\",\r",
									"                \"firstname must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"password must be non-empty\",\r",
									"                    \"username must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"password must be non-empty\",\r",
									"                            \"username must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"hami\",\r\n    \"company_id\": \"2\",\r\n    \"member_type\": 1\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"password username and firstname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"hami\",\r\n    \"company_id\": \"2\",\r\n    \"member_type\": 1\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\",\r\n        \"firstname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\",\r\n        \"firstname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.36 Register_company_admin_without_password_username_lastname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3ec7290-054b-43bb-ad81-375693828d33",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"password must be non-empty\",\r",
									"                \"username must be non-empty\",\r",
									"                \"lastname must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"password must be non-empty\",\r",
									"                    \"username must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"password must be non-empty\",\r",
									"                            \"username must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"asa\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": \"2\",\r\n    \"member_type\": 1\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"password username and lastname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"asa\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": \"2\",\r\n    \"member_type\": 1\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\",\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\",\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.37 Register_company_admin_without_password_username_company_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c30cfc52-8b84-4618-b6f8-ebbf8b9a1091",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"password must be non-empty\",\r",
									"                \"username must be non-empty\",\r",
									"                \"company id must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"password must be non-empty\",\r",
									"                    \"username must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"password must be non-empty\",\r",
									"                            \"username must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"asa\",\r\n    \"lastname\": \"sa\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": 1\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"password username and company id\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"asa\",\r\n    \"lastname\": \"sa\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": 1\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\",\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\",\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.38 Register_company_admin_without_password_username_member_type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "26ebc811-b64d-4b69-9b81-f0497af2771c",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"password must be non-empty\",\r",
									"                \"username must be non-empty\",\r",
									"                \"member_type must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"password must be non-empty\",\r",
									"                    \"username must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"password must be non-empty\",\r",
									"                            \"username must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"asa\",\r\n    \"lastname\": \"sas\",\r\n    \"company_id\": \"2\",\r\n    \"member_type\": \"\"\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "\r\nBRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"password username and member type\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"asa\",\r\n    \"lastname\": \"sas\",\r\n    \"company_id\": \"2\",\r\n    \"member_type\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.39 Register_company_admin_without_username_firstname_lastname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b387433b-5611-4a80-9811-2078c81e5001",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"username must be non-empty\",\r",
									"                \"firstname must be non-empty\",\r",
									"                \"lastname must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"username must be non-empty\",\r",
									"                    \"firstname must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"username must be non-empty\",\r",
									"                            \"firstname must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"54325\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": \"2\",\r\n    \"member_type\": 1\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"username firstname  and lastname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"54325\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": \"2\",\r\n    \"member_type\": 1\r\n}\r\nExpected Result: \r\n{\r\n    \"message\": [\r\n        \"username must be non-empty\",\r\n        \"firstname must be non-empty\",\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"username must be non-empty\",\r\n        \"firstname must be non-empty\",\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.40 Register_company_admin_without_username_firstname_company_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "70036052-9222-4358-ac23-d5811ce3764e",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"username must be non-empty\",\r",
									"                \"firstname must be non-empty\",\r",
									"                \"company id must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"username must be non-empty\",\r",
									"                    \"firstname must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"username must be non-empty\",\r",
									"                            \"firstname must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"54325\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"fs\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": 1\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"username firstname and company id\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"54325\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"fs\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": 1\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"username must be non-empty\",\r\n        \"firstname must be non-empty\",\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"username must be non-empty\",\r\n        \"firstname must be non-empty\",\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.41 Register_company_admin_without_username_firstname_member_type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "98c3f9d9-cb2c-4289-aa6a-e0e5fe0d25d4",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"username must be non-empty\",\r",
									"                \"firstname must be non-empty\",\r",
									"                \"member_type must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"username must be non-empty\",\r",
									"                    \"firstname must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"username must be non-empty\",\r",
									"                            \"firstname must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"54325\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"fs\",\r\n    \"company_id\": \"1\",\r\n    \"member_type\": \"\"\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"username firstname and member type\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"54325\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"fs\",\r\n    \"company_id\": \"1\",\r\n    \"member_type\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"username must be non-empty\",\r\n        \"firstname must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"username must be non-empty\",\r\n        \"firstname must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.42 Register_company_admin_without_firstname_lastname_company_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f4b0e707-0c49-4372-aa99-07f21bc672a9",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= \r",
									"{\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"firstname must be non-empty\",\r",
									"                \"lastname must be non-empty\",\r",
									"                \"company id must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"firstname must be non-empty\",\r",
									"                    \"lastname must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"firstname must be non-empty\",\r",
									"                            \"lastname must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"54325\",\r\n    \"username\": \"ds3\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": 1\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"firstname lastname and company id\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"54325\",\r\n    \"username\": \"ds3\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": 1\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"firstname must be non-empty\",\r\n        \"lastname must be non-empty\",\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"firstname must be non-empty\",\r\n        \"lastname must be non-empty\",\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.43 Register_company_admin_without_firstname_lastname_member_type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ea9023c5-b9ca-47bb-98bd-bd591571a6be",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= \r",
									"{\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"firstname must be non-empty\",\r",
									"                \"lastname must be non-empty\",\r",
									"                \"member_type must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"firstname must be non-empty\",\r",
									"                    \"lastname must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"firstname must be non-empty\",\r",
									"                            \"lastname must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"54325\",\r\n    \"username\": \"dfs4\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": 1,\r\n    \"member_type\": \"\"\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"firstname lastname and member type\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"54325\",\r\n    \"username\": \"dfs4\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": 1,\r\n    \"member_type\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"firstname must be non-empty\",\r\n        \"lastname must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"firstname must be non-empty\",\r\n        \"lastname must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.44 Register_company_admin_without_lastname_company_id_member_type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1a012860-16b7-487b-9cfc-79f7963b0680",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"lastname must be non-empty\",\r",
									"                \"company id must be non-empty\",\r",
									"                \"member_type must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"lastname must be non-empty\",\r",
									"                    \"company id must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"lastname must be non-empty\",\r",
									"                            \"company id must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"54325\",\r\n    \"username\": \"wdq\",\r\n    \"firstname\": \"dwq\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": \"\"\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"lastname company id and member type\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"54325\",\r\n    \"username\": \"wdq\",\r\n    \"firstname\": \"dwq\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"lastname must be non-empty\",\r\n        \"company id must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n{\r\n    \"message\": [\r\n        \"lastname must be non-empty\",\r\n        \"company id must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.45 Register_company_admin_without_email_password_username_firstname_lastname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "53cee586-cc8f-44c0-af69-6419cac039d1",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"email must be non-empty\",\r",
									"                \"password must be non-empty\",\r",
									"                \"username must be non-empty\",\r",
									"                \"firstname must be non-empty\",\r",
									"                \"lastname must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"email must be non-empty\",\r",
									"                    \"password must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"email must be non-empty\",\r",
									"                            \"password must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": 1,\r\n    \"member_type\":1\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"email password username firstname and lastname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": 1,\r\n    \"member_type\":1\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\",\r\n        \"firstname must be non-empty\",\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\",\r\n        \"firstname must be non-empty\",\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.46 Register_company_admin_without_email_password_username_firstname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5a494c15-70b7-48f4-85a4-1cb6eeedfa60",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"email must be non-empty\",\r",
									"                \"password must be non-empty\",\r",
									"                \"username must be non-empty\",\r",
									"                \"firstname must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"email must be non-empty\",\r",
									"                    \"password must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"email must be non-empty\",\r",
									"                            \"password must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"ahmed\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"email password username and firstname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"ahmed\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\",\r\n        \"firstname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\",\r\n        \"firstname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.47 Register_company_admin_without_email_password_username_lastname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3508bcb0-92df-4b9c-83ee-8b626654d073",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= \r",
									"{\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"email must be non-empty\",\r",
									"                \"password must be non-empty\",\r",
									"                \"username must be non-empty\",\r",
									"                \"lastname must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"email must be non-empty\",\r",
									"                    \"password must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"email must be non-empty\",\r",
									"                            \"password must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"fuad\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"email password username and lastname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"fuad\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\",\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\",\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-18.48 Register_company_admin_without_password_username_firstname_lastname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e276ac5d-782a-4438-a583-05e2f3e0a620",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"password must be non-empty\",\r",
									"                \"username must be non-empty\",\r",
									"                \"firstname must be non-empty\",\r",
									"                \"lastname must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"password must be non-empty\",\r",
									"                    \"username must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"password must be non-empty\",\r",
									"                            \"username must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "\r\nBRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"password username firstname and lastname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\",\r\n        \"firstname must be non-empty\",\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\",\r\n        \"firstname must be non-empty\",\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}